openapi: 3.0.3
info:
  title: Swagger Live Fraud Detector - OpenAPI 3.0
  description: |-
    This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about
    Swagger at [https://swagger.io](https://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!
    You can now help us improve the API whether it's by making changes to the definition itself or to the code.
    That way, with time, we can improve the API in general, and expose some of the new features in OAS3.

    _If you're looking for the Swagger 2.0/OAS 2.0 version of Petstore, then click [here](https://editor.swagger.io/?url=https://petstore.swagger.io/v2/swagger.yaml). Alternatively, you can load via the `Edit > Load Petstore OAS 2.0` menu option!_

    Some useful links:
    - [The repository](https://github.com/datalab-api/live-fraud-detector.git)
    - [The source API definition for the live detector fraud](https://github.com/datalab-api/live-fraud-detector/blob/main/src/swagger.yaml)
  termsOfService: http://swagger.io/terms/
  contact:
    email: mamadou.cire.guisse@kyndryl.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.0.1
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://live-fraud-detector.eu-gb.mybluemix.net/api/REST/services/v1
tags:
  - name: dataset
    description: Everything about your datasets
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: address
    description: Operation about address
    externalDocs:
      description: Find out more about our store
      url: http://swagger.io
  - name: user
    description: Operations about user
paths:
  /address:
    get:
      tags:
        - address
      summary: Logs user into the system
      description: ""
      operationId: listAddress
      parameters:
        - name: username
          in: query
          description: The user name for login
          required: false
          schema:
            type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: false
          schema:
            type: string
    post:
      tags:
        - address
      summary: Create address
      description: This can only be done by the logged in user.
      operationId: createAddress
      requestBody:
        description: Created address object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Address"
      responses:
        default:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Address"
            application/xml:
              schema:
                $ref: "#/components/schemas/Address"    
  /dataset:
    get:
        tags:
          - dataset
        summary: Logs user into the system
        description: ""
        operationId: listAddress
        parameters:
          - name: username
            in: query
            description: The user name for login
            required: false
            schema:
              type: string
          - name: password
            in: query
            description: The password for login in clear text
            required: false
            schema:
              type: string
    post:
      tags:
        - dataset
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: createUser
      requestBody:
        description: Created user object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Dataset"
      responses:
        default:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dataset"
            application/xml:
              schema:
                $ref: "#/components/schemas/Dataset"
         
  /user:
    post:
      tags:
        - user
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: createUser
      requestBody:
        description: Created user object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
          application/xml:
            schema:
              $ref: "#/components/schemas/User"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/User"


      responses:
        default:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
            application/xml:
              schema:
                $ref: "#/components/schemas/User"
  /user/login:
    get:
      tags:
        - user
      summary: Logs user into the system
      description: ""
      operationId: loginUser
      parameters:
        - name: username
          in: query
          description: The user name for login
          required: false
          schema:
            type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: false
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
            X-Expires-After:
              description: date in UTC when token expires
              schema:
                type: string
                format: date-time
          content:
            application/xml:
              schema:
                type: string
            application/json:
              schema:
                type: string
        "400":
          description: Invalid username/password supplied
  /user/logout:
    get:
      tags:
        - user
      summary: Logs out current logged in user session
      description: ""
      operationId: logoutUser
      parameters: []
      responses:
        default:
          description: successful operation
  /user/{username}:
    get:
      tags:
        - user
      summary: Get user by user name
      description: ""
      operationId: getUserByName
      parameters:
        - name: username
          in: path
          description: "The name that needs to be fetched. Use user1 for testing. "
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
            application/xml:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Invalid username supplied
        "404":
          description: User not found
    put:
      tags:
        - user
      summary: Update user
      description: This can only be done by the logged in user.
      operationId: updateUser
      parameters:
        - name: username
          in: path
          description: name that need to be deleted
          required: true
          schema:
            type: string
      requestBody:
        description: Update an existent user in the store
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
          application/xml:
            schema:
              $ref: "#/components/schemas/User"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        default:
          description: successful operation
    delete:
      tags:
        - user
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      parameters:
        - name: username
          in: path
          description: The name that needs to be deleted
          required: true
          schema:
            type: string
      responses:
        "400":
          description: Invalid username supplied
        "404":
          description: User not found
components:
  schemas:
    Address:
      type: object
      properties:
        state:
          type: string
          example: CA
        name:
          type: string
          example: 437 Lytton
        region:
          type: string
          example: Palo Alto
        city:
          type: string
        prov:
          type: string
        latt:
          type: string
        longt:
          type: string
        address:
          type: string
      xml:
        name: address
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        email:
          type: string
          example: john@email.com
        password:
          type: string
        roles:
          $ref: "#/components/schemas/Role"
      xml:
        name: user
    Role:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      xml:
        name: role
    Dataset:
      type: object
      properties:
        account_id:
          type: integer
          format: int64
          example: 10
        user_date_creation:
          type: string
          format: date-time
        addresse_changed_days:
          type: integer
        browsing_time_seconds:
          type: integer
        page_visited:
          type: integer
        number_ticket_opened:
          type: integer
        number_previous_orders:
          type: integer
        items:
          type: array
        payment_provider:
          type: integer
          format: int32
        card_nationality:
          type: string
        delivery_address:
          $ref: "#/components/schemas/Address"
        billing_country:
          type: string
        billing_address:
          type: string
        email:
          type: string
        type:
          type: string
          description: type of dataset
          default:
            - fraud
            - fraud2
            - non-fraud
        email_changed_days:
          type: integer
        delivery_company:
          type: string
        delivery_place:
          type: string
        delivery_option:
          type: string
        voucher:
          type: boolean
        subscription:
          type: boolean
        total:
          type: decimal
      xml:
        name: dataset
